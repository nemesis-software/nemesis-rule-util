package com.nemesis.platform.module.targeting;

rule "create session state if not exists"
when
    TransactionEvent($sessionId : sessionId)
    not SessionState(sessionId == $sessionId)
then
    System.out.println("creating a fact " + $sessionId);
    SessionState sessionState = new SessionState();
    sessionState.setSessionId($sessionId);
    sessionState.setState(null);
    insert(sessionState);
end

rule "Customer is photographer if he/she visits > 5 photo-related pages during last 30 sec."
when
    TransactionEvent($sessionId : sessionId)
    $sessionState : SessionState(sessionId == $sessionId, state == null)
    Number($d : doubleValue > 5)
    from
        accumulate(
            TransactionEvent(sessionId == $sessionId, pageCategory == 'womens')
            over window:length(30),
            count(1))
then
    System.out.println("the customer " + $sessionId + " visited " + $d + " times photo-related pages within last 30 seconds.");
    $sessionState.setState("photographer");
    update($sessionState);
    System.out.println("SENDING....");
    SenderUtil.sendToQueue("#######", "targeting");
end

rule "Customer is non-photographer if he/she visits > 5 non-photo-related pages during last 30 sec."
when
    TransactionEvent($sessionId : sessionId)
    $sessionState : SessionState(sessionId == $sessionId, state == null)
    Number($d : doubleValue > 5)
    from
        accumulate(
            TransactionEvent(sessionId == $sessionId, pageCategory != 'womens')
            over window:length(30),
            count(1))
then
    System.out.println("the customer " + $sessionId + " visited " + $d + " times non-photo-related pages within last 30 seconds.");
    $sessionState.setState("non-photographer");
    update($sessionState);
    System.out.println("SENDING....");
    SenderUtil.sendToQueue("!!!!!!!", "targeting");
end